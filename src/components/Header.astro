---
const currentPath = Astro.url.pathname;
const currentPathClean = currentPath.replace(/\/$/, "");
---

<header>
  <input type="checkbox" id="nav-toggle" class="hidden" />

  <!-- Hamburger Button -->
  <label
    for="nav-toggle"
    class="fixed top-[24px] right-4 z-[60] cursor-pointer md:hidden"
  >
    <div class="hamburger-icon">
      <span class="block w-8 h-[0.5px] bg-black"></span>
      <span class="block w-8 h-[0.5px] bg-transparent my-0.5"></span>
      <span class="block w-8 h-[0.5px] bg-black"></span>
    </div>
  </label>

  <!-- Main Navigation -->
  <div
    class="fixed top-0 left-0 w-full bg-white z-[55] shadow-sm"
    id="main-nav"
  >
    <div
      id="web-nav"
      class="mx-auto px-4 py-2 flex justify-between items-center"
    >
      <!-- Logo -->
      <div class="py-[6px] logo-container" transition:persist>
        <a href="/deskreview" class="focus:outline-none focus:opacity-80">
          <img
            src="/deskreview/svg/logo_full_navbar.svg"
            alt="Logo"
            class="h-6 w-auto"
            width="150"
            height="50"
            loading="eager"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex tracking-tight">
        <a
          href="/deskreview/work"
          class={`pt-[10px] pb-[6px] px-2 flex items-center text-sm
            ${currentPathClean.startsWith("/deskreview/work") ? "text-desk-black" : "text-desk-gray-700/80"}
            hover:text-desk-black focus:outline-none focus:text-desk-black`}
          >Work</a
        >
        <a
          href="/deskreview"
          class={`pt-[10px] pb-[6px] px-2 flex items-center text-sm
            ${currentPathClean === "/deskreview" ? "text-desk-black" : "text-desk-gray-700/80"}
            hover:text-desk-black focus:outline-none focus:text-desk-black`}
          >About</a
        >
        <a
          href="/deskreview/studies"
          class={`pt-[10px] pb-[6px] px-2 flex items-center text-sm
            ${currentPathClean.startsWith("/deskreview/studies") ? "text-desk-black" : "text-desk-gray-700/80"}
            hover:text-desk-black focus:outline-none focus:text-desk-black`}
          >Studies
        </a>
        <a
          href="/deskreview/contact"
          class={`pt-[10px] pb-[6px] pl-2 pr-0 flex items-center text-sm
            ${currentPathClean.startsWith("/deskreview/contact") ? "text-desk-black" : "text-desk-gray-700/80"}
            hover:text-desk-black focus:outline-none focus:text-desk-black`}
          >Contact</a
        >
      </nav>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div
    class="fixed top-0 left-0 w-full h-full bg-black hidden z-[50] md:hidden pl-4"
    id="mobile-menu"
  >
    <nav
      class="space-y-6 text-5xl font-bold font-AreaInktrap tracking-tight mt-32 opacity-0
        animate-slideinFast [--delay:0ms]"
    >
      <a
        href="/deskreview/work"
        class="block text-white hover:text-zinc-400 focus:outline-none focus:text-zinc-400"
        >Work</a
      >
      <a
        href="/deskreview"
        class="block text-white hover:text-zinc-400 focus:outline-none focus:text-zinc-400"
        >About</a
      >
      <a
        href="/deskreview/studies"
        class="block text-white hover:text-zinc-400 focus:outline-none focus:text-zinc-400"
        >Studies</a
      >
      <a
        href="/deskreview/contact"
        class="block text-white hover:text-zinc-400 focus:outline-none focus:text-zinc-400"
        >Contact</a
      >
    </nav>
  </div>
</header>

<style>
  #nav-toggle:checked ~ label .hamburger-line {
    background-color: white;
  }

  #nav-toggle:checked ~ label .hamburger-icon span:nth-child(1) {
    position: absolute;
    transform: rotate(45deg);
    top: 2px;
    background-color: white;
  }

  #nav-toggle:checked ~ label .hamburger-icon span:nth-child(3) {
    position: absolute;
    transform: rotate(-45deg);
    top: 2px;
    background-color: white;
  }

  /* Mobile menu display */
  #nav-toggle:checked ~ #mobile-menu {
    display: flex;
  }

  /* Navigation background change */
  #nav-toggle:checked ~ #main-nav {
    background-color: black;
  }

  /* Logo inversion */
  #nav-toggle:checked ~ #main-nav .logo-container img {
    filter: invert(1);
  }
</style>

<script>
  // Close mobile menu when resized to desktop size
  (() => {
    const mediaQuery = window.matchMedia("(min-width: 768px)");
    const navToggle = document.getElementById("nav-toggle") as HTMLInputElement;

    let debounceTimeout: number | undefined;

    const handleResize = () => {
      if (mediaQuery.matches && navToggle) {
        navToggle.checked = false;
      }
    };

    const debounce = (callback: () => void, delay: number) => {
      return () => {
        clearTimeout(debounceTimeout);
        debounceTimeout = window.setTimeout(callback, delay);
      };
    };

    const debouncedHandleResize = debounce(handleResize, 200);

    mediaQuery.addEventListener("change", debouncedHandleResize);

    document.addEventListener("astro:unmount", () => {
      mediaQuery.removeEventListener("change", debouncedHandleResize);
    });
  })();

  // Reload logo on contact page
  (() => {
    const reloadGif = () => {
      const logoGif = document.getElementById("logo-gif") as HTMLImageElement;
      if (logoGif) {
        const src = logoGif.src;
        logoGif.src = ""; // Force reload
        logoGif.src = src;
      }
    };

    const handlePageLoad = () => {
      if (window.location.pathname.includes("/deskreview/contact")) {
        reloadGif();
      }
    };

    document.addEventListener("astro:page-load", handlePageLoad);

    document.addEventListener("astro:unmount", () => {
      document.removeEventListener("astro:page-load", handlePageLoad);
    });
  })();
</script>

<!-- <script>
  // Close mobile menu on desktop
  const mediaQuery = window.matchMedia("(min-width: 768px)");
  const navToggle = document.getElementById("nav-toggle") as HTMLInputElement;

  const handleResize = (e: MediaQueryListEvent) => {
    if (e.matches) {
      navToggle.checked = false;
    }
  };

  mediaQuery.addEventListener("change", handleResize);

  document.addEventListener("astro:unmount", () => {
    mediaQuery.removeEventListener("change", handleResize);
  });

  // Reload logo on contact page
  const reloadGif = () => {
    const logoGif = document.getElementById("logo-gif") as HTMLImageElement;
    if (logoGif) {
      logoGif.src = logoGif.src;
    }
  };

  document.addEventListener("astro:page-load", () => {
    if (window.location.pathname.includes("/deskreview/contact")) {
      reloadGif();
    }
  });

  document.addEventListener("astro:unmount", () => {
    mediaQuery.removeEventListener("change", handleResize);
  });
</script> -->
